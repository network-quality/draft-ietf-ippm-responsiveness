<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.14 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-ippm-responsiveness-06" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Responsiveness under Working Conditions">Responsiveness under Working Conditions</title>

    <author initials="C." surname="Paasch" fullname="Christoph Paasch">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cpaasch@apple.com</email>
      </address>
    </author>
    <author initials="R." surname="Meyer" fullname="Randall Meyer">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>rrm@apple.com</email>
      </address>
    </author>
    <author initials="S." surname="Cheshire" fullname="Stuart Cheshire">
      <organization>Apple Inc.</organization>
      <address>
        <postal>
          <street>One Apple Park Way</street>
          <city>Cupertino, California 95014</city>
          <country>United States of America</country>
        </postal>
        <email>cheshire@apple.com</email>
      </address>
    </author>
    <author initials="W." surname="Hawkins" fullname="Will Hawkins">
      <organization>University of Cincinnati</organization>
      <address>
        <email>hawkinwh@ucmail.uc.edu</email>
      </address>
    </author>

    <date year="2025" month="June" day="26"/>

    <area>Transport</area>
    <workgroup>IP Performance Measurement</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks.
Even after a decade of work on standardizing technical solutions,
it remains a common problem for the end users.</t>

<t>Everyone "knows" that it is "normal" for a video conference to
have problems when somebody else at home is
watching a 4K movie or uploading photos from their phone.
However, there is no technical reason for this to be the case.
In fact, various queue management solutions
have solved the problem.</t>

<t>Our network connections continue to suffer from an unacceptable amount
of delay, not for a lack of technical solutions, but rather a lack of awareness
of the problem and deployment of its solutions.
We believe that creating a tool that measures the problem and matches people's
everyday experience will create the necessary awareness,
and result in a demand for solutions.</t>

<t>This document specifies the "Responsiveness Test" for measuring responsiveness.
It uses common protocols and mechanisms to measure user
experience specifically when the network is under working conditions.
The measurement is expressed as "Round-trips Per Minute" (RPM)
and should be included with goodput (up and down) and
idle latency as critical indicators of network quality.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>For many years, a lack of responsiveness, variously called
lag, latency, or bufferbloat, has been recognized
as an unfortunate, but common, symptom in today's networks <xref target="Bufferbloat"/>.
Solutions like fq_codel <xref target="RFC8290"/>, PIE <xref target="RFC8033"/>, Cake <xref target="Cake"/>
and L4S <xref target="RFC9330"/> have been standardized
and implemented, and are, to some extent, deployed.
Nevertheless, poor network responsiveness,
resulting from bufferbloat and other causes,
continues to affect many services and the people who use them.</t>

<t>Whenever a network path is actively being used at its full capacity,
if the bottleneck link has poor buffer management
then it may allow an overly large queue to build up,
resulting in high delay for the traffic in that queue.
Although bufferbloat significantly degrades user experience,
the impact can be transitory.
On a network that is generally underutilized
except for occasional medium-sized data transfers,
like sending an email with an attachment, or uploading a photo,
the user-experience disruptions can be intermittent and brief,
making them hard to diagnose.
The user may notice that the network seems sluggish for a few seconds,
or a videoconferencing application may briefly
show a message saying that the connection is “unstable”,
but before the user has a chance to run any
diagnostic tools to investigate, the problem has disappeared.
People have come to accept that the Internet will have “glitches”
from time to time, and it has almost become considered normal.
Upgrading to an Internet connection with higher
capacity does not eliminate these disruptions,
but it can shorten their duration.
Ironically, this has the effect of making the problem even
harder to diagnose, so instead of fixing the true problem,
this “upgrade” creates a situation where the actual
underlying problem is even more likely to remain unsolved.
Instead of eliminating Internet glitches,
it just makes them a little more elusive and harder to investigate.</t>

<t>To help engineers work on eliminating these glitches
it is useful to have a tool that
(a) reliably recreates the conditions that cause systems with
poor buffer management to exhibit latency spikes, and
(b) quantifies the magnitude of the resulting latency spikes.
This helps engineers identify where these problems exist.
After design changes are made, it helps engineers quantify
how much their changes have improved the situation.</t>

<t>Note that this document does not advocate
for entirely eliminating queues from networking,
or even for mandating shallow queues of some arbitrary fixed size.
Packet-switched network traffic tends to be bursty,
to varying degrees depending on the technology,
and queuing performs the essential function of
smoothing out those bursts to avoid packet loss.
What this document recommends is that (a) network queues should
be large enough to perform their essential smoothing function,
without being so large that they add additional unnecessary delay,
and (b) that when a persistent standing queue begins to form
(therefore exceeding the amount of queueing needed for smoothing)
network queues should communicate feedback
back to the sender, telling to to reduce its
sending rate to allow the standing queue to drain.</t>

<t>Including the responsiveness-under-working-conditions
test among other measurements of network quality
(e.g., goodput and idle latency) helps customers make
informed choices about the Internet service they buy.</t>

<section anchor="terminology"><name>Terminology</name>

<t>The term "bufferbloat" describes the situation where a network device
is prone to buffering an excessive number of packets in transit through
that device, causing a backlog of packets waiting to go out,
resulting in those waiting packets experiencing excessive delay.</t>

<t>"Latency" is a poor way to report responsiveness,
because it can be hard for the general public to understand.
The units are unfamiliar to many ("what is a millisecond?") and
can be counterintuitive ("100 msec -- that sounds good --
it's only a tenth of a second!").</t>

<t>Instead, we define the term "responsiveness under working conditions"
to make it clear that we are measuring all, not just idle, conditions,
and use "round-trips per minute" as the unit.
The advantage of using round-trips per minute as the unit are two-fold: First, it allows for a unit
that is "the higher the better". This kind of unit is often more intuitive for end-users.
Second, the range of the values tends to be around the four-digit integer range, which
is also a value easy to compare and read, again allowing for a more intuitive use.
Finally, we abbreviate the unit to "RPM", a wink to the
"revolutions per minute" that we use for car engines.</t>

<t>Some readers have complained that they don’t understand what "RPM" means,
and that it is just an arbitrary number with no way to judge
what should be considered a bad RPM rating or a good RPM rating.
We counter that argument by saying that round-trip times expressed
in milliseconds are equally arbitrary, and people similarly judge
whether a certain number of milliseconds is “good” or “bad”
from their personal experience and in relation to the range of
round trip times that are observed across a range of technologies.
In the same way, the RPM of a car engine is also interpreted
relative to the range of values that people have learned to expect.
We have learned that 8000 RPM is high for a car engine,
and anything below 1000 RPM is low.
By happy coincidence, the range of values observed for network
responsiveness happen to fall into this familiar range.</t>

<t>This document defines an algorithm for the "Responsiveness Test"
that explicitly measures responsiveness under working conditions.</t>

<t>This document imports terminology and concepts from HTTP <xref target="RFC9110"/>,
such as request and response header fields and content.</t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in BCP
14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all
capitals, as shown here.</t>

</section>
</section>
<section anchor="overview"><name>Overview</name>

<t>In the last few decades, the networking industry has made enormous
advances in terms of the quantity of data our wired and wireless
links can transfer. Rates have gone from kilobits per second, to
megabits, to gigabits, and continue to increase.
We also have broad industry agreement on the units for measuring
network capacity -- bits per second.
We have a wide array of tools available for measuring capacity
in these units, and these tools generally produce results that
are consistent and comparable between different tools.</t>

<t>In contrast to our remarkable improvements in throughput, we have
not done a good job developing networks that deliver consistently
low delay in all normal operating conditions. In fact, many people
may have unconsciously assumed that it would not be possible to
achieve such a capability. Correspondingly, we have not had
industry agreement on what constitutes reasonable fair working
conditions under which to measure a network’s round-trip delay,
and, consequently, for a long time we have measured and reported
the round-trip time on an idle network as the only metric.
The actual round-trip
times observed when traffic is flowing have generally been so much
worse than the idle round-trip time (often by a factor of 100 or
more) that it seemed almost impolite to draw attention to them.</t>

<t>And so, by measuring and reporting throughput and idle round-trip
time, we have motivated vendors and operators to focus on those
aspects of performance, and to neglect other factors that also
impact the quality of user experience.</t>

<t>Measurements of idle round-trip time can be informative, but users
care about how well their network performs when they are
using it, not only how well it performs when no one is using it.
In this document we specify how to measure network round-trip time
under reasonable representative operating conditions.
This document focusses on this specific aspect of network quality,
because we feel it is a particularly pressing issue at this time.
Future companion documents could address how to measure and report
other aspects of network quality that affect user experience.</t>

<section anchor="relevance"><name>Relevance</name>

<t>The most important property of this test tool is that its
results should be a good predictor of user experience.
High scores on the Responsiveness Test should
correlate with good user experience, and low
scores should correlate with poor user experience.
A test with this predictive power gives network engineers
a way to experiment with code changes
and then use the test to evaluate whether the changes
are beneficial, instead of having to judge the effects subjectively,
for example, by conducting a video conference and trying to assess
whether it seems to be working better or worse.</t>

</section>
<section anchor="repeatability"><name>Repeatability</name>

<t>For the test to be useful, it has to produce consistent results.
If results vary wildly from run to run, then an engineer doesn’t
know whether a different result from the test is a result of a
software change or just an artifact of randomness in the test.</t>

</section>
<section anchor="convenience"><name>Convenience</name>

<t>The test should complete as quickly as possible,
ideally with ten seconds, but only if this can be achieved
without sacrificing relevance and repeatability.</t>

</section>
<section anchor="interaction-with-end-systems"><name>Interaction with End Systems</name>

<t>Network delays that occur when traffic is flowing are not purely
a property of the network. How traffic flows is a result of the
interaction between the behavior of the network and the behavior
of the end systems generating and receiving the traffic.
Consequently, if we are to obtain useful measurements pertaining
to the network itself, uncontaminated by noise or bias introduced
by the test endpoints, we need to ensure that the test endpoints
are of the highest quality and are not responsible for introducing
significant delays (or delay variation) themselves.
This means that the test endpoints should be using source buffer management
techniques like TCP_NOTSENT_LOWAT <xref target="RFC9293"/><xref target="SBM"/>
to keep the backlog of unsent data
limited to a reasonable amount, in conjunction with the current
best-in-class rate adaptation algorithms
(such as the Prague congestion controller
<xref target="Prague"/>)
and the current best-in-class network signalling (such as L4S <xref target="RFC9330"/>).
These techniques allow the network to signal when the source
is sending too fast and a queue is starting to build up, so
that the source can adjust its sending rate accordingly.
We believe that having the network signal when the source is sending
more data than the network can carry (rather than just letting the
situation worsen until a queue overflows and packets are lost) is
vital for creating networks that deliver consistent low delay.
If our belief is correct, we expect the test results to reflect that
networks with this signalling yield lower delays than networks without it.
In any case, if the sending and receiving test endpoints are not
able to make use of L4S signalling, then the test will be unable
to measure and report the effect of L4S support (or its absence)
in the network’s bottleneck links.</t>

</section>
<section anchor="purpose-of-test-tool"><name>Purpose of Test Tool</name>

<t>The primary purpose of this test tool is to evaluate network
behavior, and that is the main focus of this document.</t>

<t>However, a secondary use can be to evaluate client and server software.</t>

<t>If a particular test client, over a particular network path,
produces good responsiveness scores when communicating with a
known-good test server, but poor results when using another test
server, that suggests problems with the other test server.
We have already had cases where we used an existing HTTP server
as a test endpoint, got worse-than-expected responsiveness scores,
and as a result realized that the HTTP server had some poor
configuration settings, which were also causing unnecessary
slowness for the other user-facing traffic it was serving. Tuning
these configuration settings for higher responsiveness lowered
delays across the board for all traffic delivered from that server.</t>

<t>Similarly, if a new test client, connecting to a known-good test
server over a particular network path, produces worse results than
an existing known-good test client, then this suggests problems
with the new test client, possibly in the new test client’s code,
or in it’s operating system’s networking implementation.
These insights can lead to enhancements in the networking code that
improve responsiveness for all software running on that operating system.</t>

</section>
<section anchor="use-of-http"><name>Use of HTTP</name>

<t>The test specified in this document is based on HTTP/2 and HTTP/3.
HTTP was selected because it is representative of a broad class of
commonly used request/response protocols, and protocols that do
bulk data transfer, adapting their sending rate to match the
available network capacity.</t>

<t>Many protocols share the property that over a single communication channel a client:</t>

<t>(a) may read small or large data objects from the server,<br />
(b) may write small or large data objects to the server,<br />
(c) may have multiple operations executing concurrently, and<br />
(d) may choose to cancel outstanding operations if
circumstances change and the operation is no longer needed.</t>

<t>If a client reads a very large data object from a server and then
a small data object, it is preferable if the small data object
doesn’t have to wait until after the very large data object has
been received in its entirety.</t>

<t>HTTP supports reads, writes, concurrent operations, cancellation
of outstanding operations, and interleaving of data from
concurrent operations. This makes HTTP a representative proxy for
virtually any request/response protocol. The specific details of
the message syntax, or the byte values used, are not important.</t>

<t>HTTP has the additional convenience that it is very widely
deployed in today’s world, and it is fairly easy to configure many
modern web servers to operate as Responsiveness Test servers.</t>

<t>If a network is able to deliver consistent low latency
even for the challenging case of a bulk data transfer over HTTP,
then it is reasonable to assume that this
network will deliver consistent low latency for all IP traffic,
including interactive audio and video telephony traffic,
which can be regarded as a kind of sender-limited bulk transfer.</t>

</section>
<section anchor="resisting-cheating"><name>Resisting Cheating</name>

<t>A desired property of the test was that it should resist cheating,
both intentional and accidental.</t>

<t>Suppose we were to measure network round-trip delay using ICMP
Echo Request packets. A network engineer given the task of
improving a vendor score on this metric might choose to simply
prioritize ICMP Echo Request packets so that they always go
directly to the front of the transmission queue.
Or, while exploring various options, the engineer might innocently
make a code change that inadvertently has this effect.
A quick run of the test tool would show that the engineer had
achieved the assigned goal -- on busy networks the tool reports
that the round trip time is now lower. Unfortunately, this change
would in no way improve actual user experience, because normal
data transfer is not performed using ICMP Echo Request packets.</t>

<t>To avoid that pitfall, the Responsiveness Test was designed to
obtain its measurements using normal client operations over HTTP.
These are representative of the kinds of operations a normal
client might do if rapidly fetching map tiles while a user scrolls
and zooms a map to view an area of interest on their smartphone,
or fetching new video data when a viewer skips ahead to a
different place in a streaming video.
Ultimately, application-layer responsiveness is what affects
user experience, not lower-layer performance metrics.</t>

<t>If a creative engineer does find a way to “cheat”
the Responsiveness Test to get a better score,
then it is almost certain that such a “cheat” would have
the effect of making real-world operations faster too.
This is a kind of “cheating” we are happy to tolerate.</t>

</section>
</section>
<section anchor="design-constraints"><name>Design Constraints</name>

<t>There are many challenges to defining measurements of the Internet:
the dynamic nature of the Internet,
the diverse nature of the traffic,
the large number of devices that affect traffic,
the difficulty of attaining appropriate measurement conditions,
diurnal traffic patterns,
and changing routes.</t>

<t>TCP and UDP traffic, or traffic on ports 80 and 443, may take
significantly different paths over the network between source and destination
and be subject to entirely different Quality of Service (QoS) treatment.
The traditional delay measurement tools use ICMP, which may experience even
more drastically different behavior than TCP or UDP.
Thus, a good test will use standard transport-layer traffic -- typical
for people's use of the network --
that is subject to the transport layer's congestion control algorithms
that might reduce the traffic's rate and thus its buffering in the network.</t>

<t>Significant queueing in the network only happens on entry to the lowest-capacity
(or "bottleneck") hop on a network path.
For any flow of data between two endpoints,
there is always one hop along the path where the capacity
available to that flow at that hop is the lowest among
all the hops of that flow's path at that moment in time.
It is important to understand that the existence of a
lowest-capacity hop on a network path, and a buffer to smooth bursts
of data, is not itself a problem.
In a heterogeneous network like the Internet, it is
inevitable that there is some hop
along a network path between two hosts with the lowest capacity for that path.
If that hop were to be improved by increasing its capacity, then some other hop would
become the new lowest-capacity hop for that path.
In this context, a "bottleneck" should not be seen as a problem to
be fixed, because any attempt to "fix" the bottleneck is futile --
such a "fix" can never remove the existence of a bottleneck
on a path; it just moves the bottleneck somewhere else.</t>

<t>Note that in a shared datagram network, conditions do not remain static.
The properties of the hop that is the current bottleneck
for a particular flow may change from moment to moment.
The amount of other traffic sharing that bottleneck may change,
or the underlying capacity of that hop itself may vary.
If the available capacity on that hop increases,
then a different hop may become the bottleneck for that flow.
For example, changes in the simultaneous transmission of data flows by hosts communicating
over the same hop may result in changes
to the share of bandwidth allocated to each flow. A user who physically moves around
may cause the Wi-Fi transmission rate to vary widely, fluctuating between
a few Mb/s when they are far from the Access Point,
and Gb/s or more when close to the Access Point.</t>

<t>Consequently, if we wish to enjoy the benefits of the Internet's great
flexibility, we need software that embraces and celebrates this
diversity and adapts intelligently to the varying conditions it encounters.</t>

<t>Because significant queueing in the network only happens on entry to the bottleneck
hop, the queue management at this critical hop of the path almost
entirely determines the responsiveness of the entire path.
If the bottleneck hop's queue management algorithm allows an
excessively large queue to form, this results in excessively large
delays for packets sitting in that queue awaiting transmission,
significantly degrading overall user experience.</t>

<t>In order to discover the depth of the buffer at the bottleneck hop,
the Responsiveness Test mimics normal network operations and data transfers,
with the goal of filling the bottleneck link to capacity, and then
measures the resulting end-to-end delay under these so-called working conditions.
A well managed bottleneck queue keeps its buffer occupancy
under control, resulting in consistently low round-trip times
and consistently good responsiveness.
A poorly managed bottleneck queue will not.</t>

<t>This section discusses bufferbloat in terms of a problem
that occurs in a network, i.e., in routers and switches.
However, there are some other system components that can also add delay.</t>

<t>In some cases the lowest capacity hop on a path is the first hop.
In this case network bufferbloat is not usually a significant
concern because the source device is simply unable to transmit data fast
enough to build up a significant queue anywhere else in the network.
However, in this case source-device bufferbloat
(excessive queuing in the device’s own outgoing network interface)
can result in excessive self-induced delays
for the traffic it is sending <xref target="SBM"/>.</t>

<t>The job of the rate adaptation (congestion control) algorithm of
the sender’s transport protocol is to determine this flow’s share of the
bottleneck hop on the path, and to restrain its own transmission rate
so as not to exceed that bottleneck rate. If the transport protocol
does not generate appropriate backpressure to the application
(e.g., using TCP_NOTSENT_LOWAT <xref target="RFC9293"/><xref target="SBM"/>) then the transport
protocol itself can cause significant delay by buffering an
excessive amount of application data that has not even been sent yet.</t>

<t>Finally, an application can make delay even worse by maintaining its own queue
of data that it hasn’t even given to the transport protocol for sending yet.
Any time data spends sitting in this application queue adds to
the delay it experiences while waiting to be set out of the network interface and
the delay it experiences while in transit traversing the network.</t>

</section>
<section anchor="goals"><name>Goals</name>

<t>The algorithm described here defines the Responsiveness Test that serves as a means of
quantifying user experience of latency in a network connection. Therefore:</t>

<t><list style="numbers">
  <t>Because today's Internet traffic primarily uses HTTP/2 over TLS, the test's
algorithm should use that protocol.  <vspace blankLines='1'/>
As a side note: other types of traffic are gaining in popularity (HTTP/3) <xref target="RFC9114"/>
and/or are already being used widely (RTP) <xref target="RFC1889"/>.
Traffic prioritization and QoS rules on the Internet may
subject traffic to completely different paths:
these could also be measured separately.</t>
  <t>Because the Internet is marked by the deployment of countless middleboxes like
“transparent” TCP proxies or traffic prioritization for certain types of traffic,
the Responsiveness Test algorithm must take into account their effect on
TCP-handshake <xref target="RFC9293"/>, TLS-handshake, and request/response.</t>
  <t>Because the goal of the test is to educate end users, the results should be expressed in an intuitive, nontechnical form
and not commit the user to spend a significant amount of their time (it is left to the implementation to chose a suitable time-limit and we recommend for
any implementation to allow the user to configure the duration of the test).</t>
</list></t>

</section>
<section anchor="measuring-responsiveness-under-working-conditions"><name>Measuring Responsiveness Under Working Conditions</name>

<t>Overall, the test to measure responsiveness under working conditions proceeds in two steps:</t>

<t><list style="numbers">
  <t>Put the network connection into "working conditions"</t>
  <t>Measure responsiveness of the network.</t>
</list></t>

<t>The following explains how the former and the latter are achieved.</t>

<section anchor="working-conditions"><name>Working Conditions</name>

<t>What are <em>the</em> conditions that best emulate how a network
connection is used? There is no one true answer to this question. It is a
tradeoff between using realistic traffic patterns and pushing the network to
its limits.</t>

<t>Current capacity-seeking transport protocols, like TCP and QUIC,
seek to achieve the highest throughput that the network can carry,
by increasing their sending rate until the network signals that
the transport protocol has reached the optimal throughput and
should not increase further.
That signal from the network can take the form of
packet loss (when a bottleneck queue overflows)
or ECN signals (prior to queue overflow).</t>

<t>The Responsiveness Test defines working conditions as the condition
where the path between the measuring endpoints is fully utilized at
its end-to-end capacity, and senders are sending a little faster
to discover if more capacity is available, causing a queue to build
up at the ingress to the bottleneck hop.
How the device at the ingress to the bottleneck hop
manages and limits the growth of that queue will influence the network
connection's responsiveness.</t>

<t>The Responsiveness Test algorithm for reaching working conditions combines
multiple standard HTTP transactions with very large data objects according to realistic traffic patterns
to create these conditions.</t>

<t>This creates a stable state of working conditions during which the
bottleneck of the path between client and server is fully utilized at its capacity,
revealing the behavior of its buffer management or Active Queue Management (AQM),
without generating DoS-like traffic
patterns (e.g., intentional UDP flooding). This creates a realistic traffic mix
representative of what a typical user's network experiences in normal operation.</t>

<t>Finally, as end-user usage of the network evolves to newer protocols and congestion
control algorithms, it is important that the working conditions also can evolve
to continuously represent a realistic traffic pattern.</t>

<section anchor="single-flow-vs-multi-flow"><name>Single-flow vs multi-flow</name>

<t>The purpose of the Responsiveness Test is not to productively move data
across the network, the way a normal application does.
The purpose of the Responsiveness Test is to, as quickly as possible, simulate
a representative traffic load as if real applications were doing
sustained data transfers and measure the resulting round-trip time
occurring under those realistic conditions.
A single TCP connection may not be sufficient
to reach the capacity and full buffer occupancy of a path quickly.
Using a 4MB receive window, over a network with a 32 ms round-trip time,
a single TCP connection can achieve up to 1Gb/s throughput.
For higher capacity connections or higher round-trip times,
a 4MB receive window is insufficient.
In addition, deep buffers along the path between the two endpoints may be
significantly larger than 4MB, and using a 4MB TCP receive window
would be insufficient to fully expose the depth of these buffers.</t>

<t>TCP allows larger receive window sizes, up to 1GB.
However, to avoid consuming too much memory, most transport stacks
today do not use such large receive windows.</t>

<t>Even if a single TCP connection would be able to fill the bottleneck's buffer,
it may take some time for a single TCP connection to ramp
up to full speed. One of the goals of the Responsiveness Test is to help the user
measure their network quickly. As a result, the test should load the
network, take its measurements, and then finish as fast as possible.</t>

<t>Finally, traditional loss-based TCP congestion control algorithms
react aggressively to packet loss by reducing the congestion window.
This reaction (intended by the protocol design) decreases the
queueing within the network, making it harder to determine the
depth of the bottleneck queue reliably.</t>

<t>For all these reasons, using multiple simultaneous parallel connections
allows the Responsiveness Test to complete its task more quickly, in a way that
overall is less disruptive and less wasteful of network capacity
than a test using a single TCP connection that would take longer
to bring the bottleneck hop to a stable saturated state.</t>

<t>One of the configuration parameters for the test is an upper bound on the number of parallel load-generating
connections. We recommend a default value for this parameter of 16.</t>

</section>
<section anchor="concurrent-vs-sequential-uplink-and-downlink"><name>Concurrent vs Sequential Uplink and Downlink</name>

<t>Poor responsiveness can be caused by bloated queues in either (or both)
the upstream and the downstream direction.
Furthermore, both paths may differ significantly due to access link
conditions (e.g., 5G downstream and LTE upstream) or routing changes
within the ISPs.
To measure responsiveness under working conditions,
the algorithm must explore both directions.</t>

<t>Most of today’s widely used network benchmark tools
measure the throughput in one direction at a time.
In a real sense this is very much a “softball” test,
contrived to let the network perform at its absolute best
so it can produce the most impressive-looking benchmark results.</t>

<t>In the 1950s we had analog telephone lines,
with the property that only one person at a time could
make a telephone call.
In the 1990s we had dial-up services like AOL,
with the property that only one person at a time could
use the telephone line to connect to AOL.
Two people in a home could not share a single
telephone line and both connect to AOL at the same time.</t>

<t>But, in contrast, by the 1990s we had packet switching,
as embodied in the Internet, Ethernet, Wi-Fi,
and similar connectionless datagram technologies.
The huge benefit of these connectionless datagram technologies
is that an arbitrary number of people and devices can
share a network and use it for different purposes
at the same time, in stark contrast to a telephone line
that can only support one telephone call at a time.
Indeed, it is common today for a home network to have
dozens of devices sharing a user’s network --
home security cameras streaming video,
adults working from home via videoconferencing,
children watching streaming video or playing video games, etc.</t>

<t>Given that today’s home networks are frequently used
by multiple people and devices at the same time,
(and given that this is arguably the whole reason
connectionless datagram networking was invented in the first place)
it makes sense for a network benchmark tool to evaluate how
well the network performs when it is being used this way,
rather than using only a carefully contrived artificial scenario,
intentionally doing only one thing at a time so as
to show the network in the best possible light.</t>

<t>For this reason, the Apple “networkQuality” tool currently
performs the upload and download tests simultaneously,
to properly reflect how well a network performs when it is used this way.</t>

<t>However, a number of caveats come with measuring concurrently:</t>

<t><list style="symbols">
  <t>Half-duplex links may not permit simultaneous uplink and downlink traffic.
This restriction means the test might not reach the path's capacity in both directions at once and thus not expose
all the potential sources of low responsiveness.</t>
  <t>Debugging the results becomes harder:
During concurrent measurement it is impossible to differentiate whether
the observed delay happens in the uplink or the downlink direction.</t>
</list></t>

<t>For this reason, a test tool should also offer the option
of performing the upload and download tests sequentially,
to help engineers diagnose whether the source of excessive delay
is in the upstream direction, downstream direction, or both.</t>

</section>
<section anchor="achieving-steady-state-buffer-utilization"><name>Achieving Steady-State Buffer Utilization</name>

<t>The Responsiveness Test gradually increases the number of TCP connections (known as load-generating connections)
and measures "goodput" (the sum of actual data transferred across all connections in a unit of time)
continuously.
By definition -- once goodput is maximized -- if the transport protocol emits more
traffic into the network than is needed, the additional traffic will either
get dropped, or be buffered and thus create a "standing queue" that is characteristic
of bufferbloat.
At this moment the test starts
measuring the responsiveness until that metric reaches saturation.
At this point we are creating the worst-case scenario
(best-case for throughput, worst-case for latency)
within the limits of the
realistic traffic pattern. Well designed network equipment
handles this scenario without creating excessive delay.</t>

<t>The algorithm presumes that goodput increases rapidly until TCP
connections complete their TCP slow-start phase.
At that point, goodput eventually stalls,
often due to receive window limitations, particularly in cases of
high network bandwidth, high network round-trip time,
low receive window size, or a combination of all three.
The only means to further increase goodput is by
adding more TCP connections to the pool of load-generating connections.
If new connections don't result in an increase in goodput,
full link utilization has been reached.
At this point, adding more connections will reveal the extent to which
the network is willing to buffer excess packets, with a resulting increase
in round-trip delay (decrease in responsiveness).
When the bottleneck queue signals the sender(s) to slow down
(either via packet drop or via ECN marking)
then the round-trip delay will stabilize.</t>

</section>
<section anchor="avoiding-test-hardware-bottlenecks"><name>Avoiding Test Hardware Bottlenecks</name>

<t>The Responsiveness Test could be run from various devices that are either consumer devices
or Internet infrastructure such as routers. Many home routers are cost-sensitive embedded devices
optimised for switching packets rather than terminating TLS connections at line rate. As a
result, they may not have sufficient processing power or memory bandwidth to saturate a
bottleneck link in order to be a useful test client for the responsiveness test.</t>

<t>In order to measure responsiveness from these devices, the test can be conducted without TLS
over plain HTTP. Whenever possible, it is preferred to test using TLS to resemble typical
Internet traffic to the maximum extent.</t>

</section>
</section>
<section anchor="test-parameters"><name>Test parameters</name>

<t>A number of parameters can be used to configure the test methodology. The following list
contains the names of those parameters and their default values. The detailed description of the
methodology that follows will explain how these parameters are being used. Experience has shown
that the default values for these parameters allow for a low runtime for the test and produce
accurate results in a wide range of environments.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Explanation</ttcol>
      <ttcol align='left'>Default Value</ttcol>
      <c>MAD</c>
      <c>Moving Average Distance (number of intervals to take into account for the moving average)</c>
      <c>4</c>
      <c>ID</c>
      <c>Interval duration at which the algorithm reevaluates stability</c>
      <c>1 second</c>
      <c>TMP</c>
      <c>Trimmed Mean Percentage to be trimmed</c>
      <c>95%</c>
      <c>SDT</c>
      <c>Standard Deviation Tolerance for stability detection</c>
      <c>5%</c>
      <c>INP</c>
      <c>Initial number of concurrent transport connections at the start of the test</c>
      <c>1</c>
      <c>INC</c>
      <c>Number of transport connections to add to the pool of load-generating connections at each interval</c>
      <c>1</c>
      <c>MNP</c>
      <c>Maximum number of parallel transport-layer connections</c>
      <c>16</c>
      <c>MPS</c>
      <c>Maximum responsiveness probes per second</c>
      <c>100</c>
      <c>PTC</c>
      <c>Percentage of Total Capacity the probes are allowed to consume</c>
      <c>5%</c>
</texttable>

</section>
<section anchor="measuring-responsiveness"><name>Measuring Responsiveness</name>

<t>Measuring responsiveness under working conditions is an iterative process.
Moreover, it requires a sufficiently large sample of measurements to have confidence in the results.</t>

<t>The measurement of the responsiveness happens by sending probe-requests.
There are two types of probe requests:</t>

<t><list style="numbers">
  <t>An HTTP GET request on a connection separate from the load-generating connections ("foreign probes").
This probe type mimics the time it takes for a web browser to connect to a new
web server and request the first element of a web page (e.g., "index.html"),
or the startup time for a video streaming client to launch and begin fetching media.</t>
  <t>An HTTP GET request multiplexed on the load-generating connections ("self probes").
This probe type mimics the time it takes for a video streaming client
to skip ahead to a different chapter in the same video stream,
or for a navigation mapping application to react and fetch new map tiles
when the user scrolls the map to view a different area.
In a well functioning system, fetching new data
over an existing connection should take less time than
creating a brand new TLS connection from scratch to do the same thing.</t>
</list></t>

<t>Foreign probes will provide three (3) sets of data-points: First, the duration of the TCP-handshake
(noted hereafter as <spanx style="verb">tcp_f</spanx>).
Second, the TLS round-trip-time (noted <spanx style="verb">tls_f</spanx>). For this, it is important to note that different TLS versions
have a different number of round-trips. Thus, the TLS establishment time needs to be
normalized to the number of round-trips the TLS handshake takes until the connection
is ready to transmit data. In the case that TLS is not being used, it is undefined.
And third, the HTTP elapsed time between issuing the GET
request for a 1-byte object and receiving the entire response (noted <spanx style="verb">http_f</spanx>).</t>

<t>Self probes will provide a single data-point that measures the duration of time between
when the HTTP GET request for the 1-byte object is issued on the load-generating connection and when the
full HTTP response has been received (noted <spanx style="verb">http_l</spanx>). For cases where multiplexing GET requests into
the load generation connections is not possible (e.g. due to only HTTP/1.1 being available), the TCP
stack estimated round-trip-time can be used as a proxy or substitute value.</t>

<t><spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx> and <spanx style="verb">http_l</spanx> are all measured in milliseconds.</t>

<t>The more probes that are sent, the more data available for calculation. In order to generate
as much data as possible, the Responsiveness Test specifies that a client issue these probes regularly.
There is, however, a risk that on low-capacity networks the responsiveness probes
themselves will consume a significant amount of the capacity. Because the test mandates
first saturating capacity before starting to probe for responsiveness, the test will have an
accurate estimate of how much of the capacity the responsiveness probes will consume and never
send more probes than the network can handle.</t>

<t>Limiting the data used by probes can be done by providing an estimate of the number of bytes exchanged for
each of the probe types. Taking TCP and TLS overheads into account, we can estimate
the amount of data exchanged for a foreign probe to be around 5000 bytes.
For self probes we can expect an overhead of no more than 1000 bytes.</t>

<t>Given this information, we recommend that a test client does
not send more than <spanx style="verb">MPS</spanx> (Maximum responsiveness Probes per Second - default to 100) probes per <spanx style="verb">ID</spanx>.
The same amount of probes should be sent on load-generating as well as on separate connections.
The probes should be spread out equally over the duration of the interval, with the two types
of probes interleaving with each other.
The test client
should uniformly and randomly select from the active load-generating connections on which to send self probes.</t>

<t>According to the default parameter values, the probes will consume 300 KB (or 2400Kb) of data per second, meaning
a total capacity utilization of 2400 Kbps for the probing.</t>

<t>On high-speed networks, these default parameter values will provide a significant amount of samples, while at
the same time minimizing the probing overhead.
However, on severely capacity-constrained networks the probing traffic could consume
a significant portion of the available capacity. The Responsiveness Test must
adjust its probing frequency in such a way that the probing traffic does not consume
more than <spanx style="verb">PTC</spanx> (Percentage of Total Capacity - default to 5%) of the available capacity.</t>

<section anchor="aggregating-the-measurements"><name>Aggregating the Measurements</name>

<section anchor="for-the-tls-enabled-case"><name>For the TLS-Enabled Case</name>

<t>The algorithm produces sets of 4 times for each probe, namely:
<spanx style="verb">tcp_f</spanx>, <spanx style="verb">tls_f</spanx>, <spanx style="verb">http_f</spanx>, <spanx style="verb">http_l</spanx> (from the previous section).
The responsiveness of the network connection being tested evolves over time as buffers gradually reach saturation. Once
the buffers are saturated, responsiveness will stabilize. Thus, the final calculation of network responsiveness
considers the last MAD (Moving Average Distance - default to 4) intervals worth of completed responsiveness probes.</t>

<t>Over that period of time, a large number of samples will have been collected.
These may be affected by noise in the measurements, and outliers. Thus, to aggregate these
we suggest using a single-sided trimmed mean at the <spanx style="verb">TMP</spanx> (Trimmed Mean Percentage - default to 95%) percentile, thus providing the following numbers:
<spanx style="verb">TM(tcp_f)</spanx>, <spanx style="verb">TM(tls_f)</spanx>, <spanx style="verb">TM(http_f)</spanx>, <spanx style="verb">TM(http_l)</spanx>.</t>

<t>The responsiveness is then calculated as the average of the "foreign responsiveness"
on separate connections and the responsiveness on load-generating connections.</t>

<figure><artwork><![CDATA[
Foreign_Responsiveness = 60000 / ((TM(tcp_f)+TM(tls_f)+TM(http_f))/3)
Loaded_Responsiveness = 60000 / TM(http_l)
Responsiveness = (Foreign_Responsiveness + Loaded_Responsiveness) / 2
]]></artwork></figure>

<t>This responsiveness value presents round-trips per minute (RPM).</t>

</section>
<section anchor="for-the-tcp-only-case"><name>For the TCP-Only Case</name>

<t>If there are no TLS connections being used, then the notion of a normalised round-trip time for the TLS handshake does not apply.
Zeroes cannot be substituted for <spanx style="verb">tls_f</spanx>, as that will result in an artificially low responsiveness value.
Instead, the same principle of giving each contribution to the foreign RTT equal weight, and then giving the foreign and self RTTs
equal weights is applied.</t>

<t>The TCP-only responsiveness is therefore calculated in the following way:</t>

<figure><artwork><![CDATA[
Foreign_Responsiveness = 60000 / ((TM(tcp_f) + TM(http_f)) / 2)
Loaded_Responsiveness = 60000 / TM(http_l)
Responsiveness = (Foreign_Responsiveness + Loaded_Responsiveness) / 2
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="final-algorithm"><name>Final Algorithm</name>

<t>Considering the previous two sections, where we explained the meaning of
working conditions and the definition of responsiveness, we can now describe
the design of the final algorithm. In order to measure the worst-case delay, we need to transmit
traffic at the full capacity of the path as well as ensure the buffers are filled
to the maximum.
We can achieve this by continuously adding HTTP sessions to the pool of connections
in an ID (Interval duration - default to 1 second) interval. This technique
ensures that we quickly reach full capacity.
In parallel with this process we send responsiveness probes.
First, the algorithm reaches stability for the goodput. Once
goodput stability has been achieved, the responsiveness stability is tracked
until it is shown to be stable at which point the final measurement can be computed.</t>

<t>We consider both goodput and responsiveness to be stable when the standard deviation
of the moving averages of the responsiveness calculated in the immediately preceding MAD intervals is within SDT
(Standard Deviation Tolerance - default to 5%) of the moving average calculated in the most-recent ID.</t>

<t>The following algorithm reaches working conditions of a network
by using HTTP/2 upload (POST) or download (GET) requests of infinitely large
files.
The algorithm is the same for upload and download and uses
the same term "load-generating connection" for each.
The actions of the algorithm take place at regular intervals. For the current draft
the interval is defined as one second.</t>

<t>Where</t>

<t><list style="symbols">
  <t><spanx style="verb">i</spanx>: The index of the current interval. The variable <spanx style="verb">i</spanx> is initialized to <spanx style="verb">0</spanx> when the algorithm begins and
increases by one for each interval.</t>
  <t>moving average aggregate goodput at interval <spanx style="verb">p</spanx>: The number of total bytes of data transferred within
interval <spanx style="verb">p</spanx> and the <spanx style="verb">MAD - 1</spanx> immediately preceding intervals, divided by <spanx style="verb">MAD</spanx> times <spanx style="verb">ID</spanx>.</t>
</list></t>

<t>the steps of the algorithm are:</t>

<t><list style="symbols">
  <t>Create INP load-generating connections (INP defaults to 1, but can be increased if one has prior knowledge on the capacity of the link).</t>
  <t>Launch a new foreign and self probe (according to the specification set forth
above) every 1/<spanx style="verb">MPS</spanx> seconds until <spanx style="verb">MPS</spanx>*<spanx style="verb">ID</spanx> pairs of probes have been launched
or the end of the interval is reached, whichever comes first.
probes to not exceed the percentage of total capacity (PTC).</t>
  <t>At each interval:
  <list style="symbols">
      <t>Create INC additional load-generating connections (INC defaults to 1, but can be increased for a more aggressive ramp-up phase).</t>
      <t>If goodput has not saturated:
      <list style="symbols">
          <t>Compute the moving average aggregate goodput at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_average</spanx>.</t>
          <t>If the standard deviation of the past <spanx style="verb">MAD</spanx> average goodput values is less than SDT of the <spanx style="verb">current_average</spanx>, declare goodput saturation and move on to probe responsiveness.</t>
        </list></t>
      <t>If goodput saturation has been declared:
      <list style="symbols">
          <t>Compute the responsiveness at interval <spanx style="verb">i</spanx> as <spanx style="verb">current_responsiveness</spanx>.</t>
          <t>If the standard deviation of the past MAD responsiveness values is less than SDT of the <spanx style="verb">current_responsiveness</spanx>, declare responsiveness saturation and report <spanx style="verb">current_responsiveness</spanx>
as the final test result.</t>
        </list></t>
    </list></t>
</list></t>

<t>In <xref target="goals"/>, it is mentioned that implementations may chose to implement a time-limit
on the duration of the test.
If stability is not reached within the time-frame, the implementation can report
the current results with a indication of confidence in the result as described in
the following section.</t>

<t>Finally, if at any point one of these connections terminates with an error, the test should be aborted.</t>

<section anchor="confidence-of-test-results"><name>Confidence of test-results</name>

<t>As described above, a tool running the algorithm typically defines a time-limit for
the execution of each of the stages. For example, if the tool allocates a total
run-time of 40 seconds, and it executes a full downlink followed by a uplink test,
it may allocate 10 seconds to each of the saturation-stages (downlink capacity saturation, downlink responsiveness saturation, uplink capacity saturation, uplink responsiveness saturation).</t>

<t>As the different stages may or may not reach stability, we can define a "confidence score"
for the different metrics (capacity and responsiveness) the methodology was able to measure.</t>

<t>We define "Low" confidence in the result if the algorithm was not even able to
execute MAD iterations of the specific stage. Meaning, the moving average is
not taking the full window into account. This can happen if the time-limit of the
test has been reached before MAD intervals could execute.</t>

<t>We define "Medium" confidence if the algorithm was able to execute at least MAD
iterations, but did not reach stability based on standard deviation tolerance.</t>

<t>We define "High" confidence if the algorithm was able to fully reach stability
based on the defined standard deviation tolerance.</t>

<t>It must be noted that depending on the chosen standard deviation tolerance or
other parameters of the methodology and the network-environment it may be that a
measurement never converges to a stable point.
This is expected and part of the dynamic nature of networking and the accompanying
measurement inaccuracies, which is why the importance of imposing a time-limit
is so crucial, together with an accurate depiction of the "confidence" the methodology
was able to generate. The confidence score should be reported to the user as part of
the main results.</t>

</section>
</section>
</section>
<section anchor="interpreting-responsiveness-results"><name>Interpreting responsiveness results</name>

<t>The described methodology uses a high-level approach to measure responsiveness.
By executing the test with normal HTTP requests, a number of elements come into
play that will influence the result. Contrary to more traditional measurement methods,
the responsiveness metric is not only influenced by the properties of the
network, but can significantly be influenced by the properties of the client
and the server implementations. This is fully intentional as the properties of the
client and the server implementations have a direct impact on the perceived responsiveness by the user. This section describes how the different
elements influence responsiveness and how a user may differentiate them
when debugging a network.</t>

<section anchor="elements-influencing-responsiveness"><name>Elements influencing responsiveness</name>

<t>Due to the HTTP-centric approach of the measurement methodology a number of
factors come into play that influence the results. Namely, the client-side
networking stack (from the top of the HTTP-layer all the way down to the physical layer),
the network (including potential “transparent” HTTP "accelerators"), and the server-side
networking stack. The following outlines how each of these contributes to the responsiveness.</t>

<section anchor="client-side-influence"><name>Client side influence</name>

<t>As the driver of the measurement, the client-side networking stack can have a
large influence on the result. The biggest influence of the client comes
when measuring the responsiveness in the uplink direction. Load-generation can
cause queue-buildup in the transport layer as well as the HTTP layer. Additionally,
if the network's bottleneck is on the first hop, queue-buildup can happen at the
layers below the transport stack (e.g., in the outgoing network interface).</t>

<t>Each of these queue build-ups may cause delay and thus low responsiveness.
A well designed networking stack ensures that queue-buildup in the TCP layer
is kept at a bare minimum with solutions like TCP_NOTSENT_LOWAT <xref target="RFC9293"/><xref target="SBM"/>.
At the HTTP/2 layer it is important that the load-generating data is not interfering
with the latency-measuring probes. For example, the different streams should not
be stacked one after the other but rather be allowed to be multiplexed for
optimal latency. The queue-buildup at these layers would only influence latency
on the probes that are sent on the load-generating connections.</t>

<t>Below the transport layer many places have a potential queue build-up.
It is important to keep these queues at reasonable sizes.</t>

<t>Flow-queueing techniques like FQ-Codel are valuable for insulating
well behaved flows from badly behaved flows,
but flow-queueing alone without intelligent queue management
cannot insulate a flow from its own capacity-seeking behavior.</t>

<t>Depending on the techniques used at these layers, the queue build-up
can influence latency on probes sent on load-generating connections as well as
separate connections. If flow-queuing is used at these layers, the impact on
separate connections will be negligible.
This is why the Responsiveness Test performs probes
on load-generating connections, to detect and report
the responsiveness experienced by capacity-seeking flows,
not only the responsiveness experienced by low-rate flows.</t>

</section>
<section anchor="network-influence"><name>Network influence</name>

<t>The network obviously is a large driver for the responsiveness result.
Propagation delay from the client to the server,
waiting to access a shared resource like radio spectrum,
queuing in the bottleneck node,
and other sources of delay
all add to latency <xref target="BITAG"/>.
Beyond these traditional sources of latency,
other factors may influence the results as well. Many networks deploy “transparent”
TCP Proxies, firewalls doing deep packet-inspection, HTTP "accelerators" and similar
middleboxes.
As the methodology relies on the use of HTTP/2, the responsiveness metric will
be influenced by such devices as well.</t>

<t>The network will influence both kinds of latency probes that the responsiveness
tests sends out. Depending on the network's use of AQM and whether
this includes flow-queuing or not, the latency probes on the load-generating
connections may be influenced differently than the probes on the separate
connections.</t>

</section>
<section anchor="server-side-influence"><name>Server side influence</name>

<t>Finally, the server-side introduces the same kind of influence on the responsiveness
as the client-side, with the difference that the responsiveness will be impacted
during the downlink load generation.</t>

<t>Beyond the server's networking stack influence, the server selection impacts the
result as well. First, the network path chosen between client and server is influenced
by the server selection. Second, the network stack deployed on the selected server
may not be representative for workloads that are relevant to the user running the test.</t>

</section>
</section>
<section anchor="investigating-poor-responsiveness"><name>Investigating Poor Responsiveness</name>

<t>Once a responsiveness result has been generated, one might be motivated to try to localize
the source of a low responsiveness. The responsiveness measurement
is however aimed at providing a quick, top-level view of the responsiveness
under working conditions the way end-users experience it.
Localizing the source of low responsiveness involves however a set of different
tools and methodologies.</t>

<t>Nevertheless, the Responsiveness Test allows users to gain
some insight into what is responsible for excessive delay.
To gain this insight, implementations of the responsiveness
test are encouraged to have an optional verbose mode that exposes the inner workings
of the algorithm as well as statistics from the lower layers.
The following is a non-exhaustive list of additional information that can be exposed
in the verbose mode: Idle latency (measured at the beginning from the initial connections),
achieved capacity on load-generating connections, TM(tcp_f), TM(tls_f), TM(http_f) and TM(http_l)
(and even their raw values), HTTP-protocol (HTTP/1.1, HTTP/2, HTTP/3), transport protocol (TCP, QUIC, ...), congestion-control
algorithm (Cubic, BBR, ...) used on the client-side, ECN or L4S statistics, IP version, ... and many more.</t>

<t>The previous section described the elements that influence
responsiveness. It is apparent that the delay measured
on the load-generating connections and the delay measured on separate connections
may be different due to the different elements.</t>

<t>For example, if the delay measured on separate connections is much less than the
delay measured on the load-generating connections, it is possible to narrow
down the source of the additional delay on the load-generating connections.
As long as the other elements of the network don't do flow-queueing, the additional
delay must come from the queue build-up at the HTTP and TCP layer.
This is because all other bottlenecks in the network that may cause a queue build-up
will be affecting the load-generating connections as well as the separate
latency-probing connections in the same way.</t>

<t>Beyond the difference in the delay of the load-generating connections and the
separate connections, another element can provide additional information: Namely,
testing against different servers located in different places along the path will
allow, to some extent, the opportunity to separate the network’s path
into different segments. For
example, if the cable modem and a more distant ISP server are hosting
responsiveness measurement endpoints, some localization of the issue can be done.
If the RPM to the cable modem is very high, it means that the network segment
from the client endpoint to the cable modem does not have responsiveness issues,
thus allowing the user to conclude that possible responsiveness issues are
beyond the cable modem.
It must be noted, though, that due to the high level approach to the testing
(including HTTP), a low responsiveness to the cable modem does not necessarily
mean that the network between client and cable modem is the problem (as
outlined in the above previous paragraphs).</t>

</section>
</section>
<section anchor="responsiveness-test-server"><name>Responsiveness Test Server</name>

<t>The responsiveness measurement is built upon a foundation of standard protocols:
IP, TCP, TLS, HTTP/2.
On top of this foundation, a minimal amount of new "protocol" is defined,
merely specifying the URLs that used for GET and POST in the process of
executing the test.</t>

<t>Both the client and the server MUST support HTTP/2 over TLS.
The client and the server MAY also support HTTP/3 over QUIC.
The client MUST be able to send a request with a GET or POST method.
The client MUST send the GET with the "Accept-Encoding" header set to "identity" to ensure the
server will not compress the data.
The server MUST be able to respond to both of these
HTTP commands.
The server MUST have the ability to respond to a GET request with content.</t>

<t>The server MUST respond to 4 URLs:</t>

<t><list style="numbers">
  <t>A "small" URL/response:
The server must respond with a status code of 200 (OK) and 1 byte of content.
The actual message content is irrelevant.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The server SHOULD minimize the size, in bytes, of the response fields that are encoded and sent on the wire.</t>
  <t>A "large" URL/response:
The server must respond with a status code of 200 (OK) and content size of at least 8GB.
The server SHOULD specify the Content-Type header field with the media type "application/octet-stream".
The content can be larger, and may need to grow as network speeds increases over time.
The actual message content is irrelevant.
The client will probably never completely download the object,
but will instead close the connection after reaching working conditions
and making its measurements.</t>
  <t>An "upload" URL/response:
The server must handle a POST request with an arbitrary content size.
The server should discard the content.
The actual POST message content is irrelevant.
The client will probably never completely upload the object,
but will instead close the connection after reaching working conditions
and making its measurements.</t>
  <t>A .well-known URL <xref target="RFC8615"/> that serves a JSON object providing
the three test URLs described above and other configuration information for
the client to run the test (See <xref target="discovery"/>, below.)</t>
</list></t>

<t>The client begins the responsiveness measurement by querying for the JSON <xref target="RFC8259"/> configuration.
This supplies the URLs for creating the load-generating connections in
the upstream and downstream direction as well as the small object
for the latency measurements.</t>

</section>
<section anchor="discovery"><name>Responsiveness Test Server Discovery</name>

<t>It makes sense for a service provider (either an application service provider like a video conferencing service
or a network access provider like an ISP) to host Responsiveness Test Servers on their
network so customers can determine what to expect about the quality of their connection to
the service offered by that provider.
However, when a user performs a Responsiveness Test and determines
that they are suffering from poor responsiveness during the connection to that service,
the logical next questions might be,</t>

<?rfc subcompact="yes" ?>
<t><list style="numbers">
  <t>"What's causing my poor performance?"</t>
  <t>"Something to do with my home Wi-Fi Access point?"</t>
  <t>"Something to do with my home gateway?"</t>
  <t>"Something to do with my service provider?"</t>
  <t>"Something else entirely?"
<?rfc subcompact="no" ?></t>
</list></t>

<t>To help an end user answer these questions, it will be useful for test clients
to be able to easily discover Responsiveness Test Servers running in various
places in the network (e.g., their home router, their Wi-Fi access point, their ISP's
head-end equipment, etc).</t>

<t>Consider this example scenario: A user has a cable modem
service offering 100 Mb/s download speed, connected via
gigabit Ethernet to one or more Wi-Fi access points in their home,
which then offer service to Wi-Fi client devices at different rates
depending on distance, interference from other traffic, etc.
By having the cable modem itself host a Responsiveness Test Server,
the user can then run a test between the cable modem and their computer
or smartphone, to help isolate whether bufferbloat they are experiencing
is occurring in equipment inside the home (like their Wi-Fi access points)
or somewhere outside the home.</t>

<section anchor="well-known-uniform-resource-identifier-uri-for-test-server-discovery"><name>Well-Known Uniform Resource Identifier (URI) For Test Server Discovery</name>

<t>An organization or device that hosts a Responsiveness Test Server
advertises that service using the network quality well-known URI <xref target="RFC8615"/>.
The URI scheme is "https" and the application name is "nq"
(e.g., https://example.com/.well-known/nq).
No additional path components, query strings or fragments are valid
for this well-known URI.
The media type of the resource at the well-known URI is "application/json" and
the format of the resource is a valid JSON object as specified below:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url": "<URL for bulk download>",
    "small_download_url": "<URL for small download>",
    "upload_url":         "<URL for small upload>"
  }
  "test_endpoint":        "<hostname for server to use for testing>"
}
]]></artwork></figure>

<t>The fields can appear in any order.</t>

<t>The content of the "version" field SHALL be "1".
Integer values greater than "1" are reserved
for possible use in future updates to this protocol.</t>

<t>The content of the "large_download_url", "small_download_url", and "upload_url"
SHALL all be validly formatted "http" or "https" URLs.
All three URLs MUST contain the same &lt;host&gt; part so that they are
eligible to be multiplexed onto the same TCP or QUIC connection.
If the three URLs do not contain the same &lt;host&gt; part
then the JSON configuration information object is invalid
and the client MUST ignore the entire JSON object.</t>

<t>The "version" field and the three URLs are mandatory
and each MUST appear exactly once in the JSON object.
If any of these fields are missing or appear more than once,
the configuration information is invalid and the entire JSON object MUST be ignored.
If a client implementing the current version of this specification encounters
a JSON configuration information object where the "version" field is not "1",
then the client should assume that it is unable
to safely parse the configuration information object
(that’s what incrementing the version field indicates)
and the client MUST ignore the entire JSON object.</t>

<t>The "test_endpoint" field is OPTIONAL,
and if present MUST appear exactly once in the JSON object.
If the "test_endpoint" field appears more than once,
the configuration information is invalid and the entire JSON object MUST be ignored.
If present, then for the purpose of determining the IP address to which it should
connect the test client MUST ignore the &lt;host&gt; part in the URLs and instead
connect to one of the IP addresses indicated by the "test_endpoint" field,
as determined by the test client’s address resolution policy
(e.g., Happy Eyeballs <xref target="RFC8305"/>).
The test client then sends HTTP GET and POST requests
(as determined by the test procedure)
to the host indicated by the "test_endpoint" field,
forming its HTTP requests using the &lt;host&gt; and &lt;path&gt; from the specified URLs.
In other words, when the "test_endpoint" field is present
the test client operates as if it were simply
using the specified URLs directly, except that it behaves
as if it had a local (e.g., “/etc/hosts”) entry overriding the
IP address(es) of the &lt;host&gt; given in the URLs to be the
IP address(es) of the "test_endpoint" hostname instead.
In the case of a large web site served by multiple load-balanced
servers, this feature gives the administrator more precise control over
which of those servers are used for responsiveness testing.
In a situation where some of a site’s servers have been configured
to deliver low-delay HTTP responses and some have not,
it can be useful to be able to measure the responsiveness of different
servers with different configurations to see how they compare
when handling identical HTTP GET and POST requests.</t>

<t>Servers implementing the current version of this specification
SHOULD NOT include any names in the JSON configuration information
other than those documented here.
Future updates to this specification may define additional names
in the JSON configuration information.
To allow for these future backwards-compatible updates,
clients implementing the current version of this specification
MUST silently ignore any unrecognized names in the
JSON configuration information they receive,
and MUST process the required names as documented here,
behaving as if the unrecognized names were not present.</t>

</section>
<section anchor="dns-based-service-discovery-for-test-server-discovery"><name>DNS-Based Service Discovery for Test Server Discovery</name>

<t>To further aid the test client in discovering Responsiveness Test Servers,
organizations or devices offering Responsiveness Test Servers
MAY advertise their availability using DNS-Based Service Discovery <xref target="RFC6763"/>
over Multicast DNS <xref target="RFC6762"/> or conventional unicast DNS <xref target="RFC1034"/>,
using the service type <xref target="RFC6335"/> "_nq._tcp".</t>

<t>When advertising over Multicast DNS, typically the device offering
the test service generally advertises its own Multicast DNS records.</t>

<t>When advertising over unicast DNS, population of the appropriate
DNS zone with the relevant unicast discovery records can be performed
by having a human administrator manually enter the required records,
or automatically using a Discovery Proxy <xref target="RFC8766"/>.</t>

<section anchor="unicast-dns-sd-example"><name>Unicast DNS-SD Example</name>

<t>An obscure service provider hosting a Responsiveness Test Server instance for their
organization (obs.cr) on the "rpm.obs.cr" host would return the following answers
to conventional PTR and SRV DNS queries:</t>

<figure><artwork><![CDATA[
$ nslookup -q=ptr _nq._tcp.obs.cr.
Non-authoritative answer:
_nq._tcp.obs.crname = rpm._nq._tcp.obs.cr.
$ nslookup -q=srv rpm._nq._tcp.obs.cr.
Non-authoritative answer:
rpm._nq._tcp.obs.crservice = 0 0 443 rpm.obs.cr.
]]></artwork></figure>

<t>Given those DNS query responses, the client would proceed to access the rpm.obs.cr
host on port 443 at the .well-known/nq well-known URI to begin the test.</t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>The security considerations that apply to any Active
Measurement of live paths are relevant here <xref target="RFC4656"/><xref target="RFC5357"/>.</t>

<t>If server-side resource consumption is a concern, a server can choose to not reply or delay
its response to the initial request for the configuration information through the
.well-known URL.</t>

</section>
<section anchor="discussion"><name>DISCUSSION</name>

<t>We seek feedback from designers of delay-sensitive applications,
such as on-line games and videoconferencing applications, about
whether this test accurately predicts their real-world user experience.</t>

<t>As this document as evolved through multiple revisions, it has
arrived at an algorithm that discards the worst 5% of round-trip measurements,
and reports the arithmetic mean of the the best 95%, because this enabled
the algorithm to generate results that are both quick to produce and consistent
from one run to the next.</t>

<t>However, the BITAG “Latency Explained” report <xref target="BITAG"/> states that the 95th,
98th, or 99th percentile round-trip time is indicative of the behaviour
of videoconferencing applications,
which is more or less the opposite of the current Responsiveness Test.</t>

<t>While repeatability and convenience are both valuable properties of the test,
we need to ensure that we have not sacrificed relevance in the pursuit
of these two other goals.</t>

<t>If we cannot achieve all three goals in a single test,
we may need to have two versions of the test:
a “quick” version that runs in about ten seconds and gives an
approximate “ball park” result, suitable for a user to determine
quickly whether their Internet connection is good or terrible, and
a “precise” version that runs for longer and gives highly accurate and
repeatable results, suitable for an equipment vendor or network operator
to use when advertising the quality of their offerings.</t>

<t>The current specification of the Responsiveness Test
includes a number of configurable parameters.
If we want the Responsiveness Test to produce a score that can be compared
meaningfully between different hardware and different network operators,
we need to specify required values for these configurable parameters.
For engineering diagnostic purposes different parameter values may be useful,
but for comparisons between vendors or operators we need IETF consensus
on fixed standardized test parameters that everyone uses.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="well-known-uri"><name>Well-Known URI</name>

<t>This specification registers the "nq" well-known URI in the
"Well-Known URIs" registry <xref target="RFC5785"/>.</t>

<t>URI suffix: nq</t>

</section>
<section anchor="service-name"><name>Service Name</name>

<t>IANA has added the following value to the "Service Name and Transport
Protocol Port Number Registry".</t>

<figure><artwork><![CDATA[
Service Name:       nq
Transport Protocol: TCP
Assignee:           Stuart Cheshire
Contact:            Stuart Cheshire
Description:        Network Quality test server endpoint
]]></artwork></figure>

</section>
</section>
<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>Special thanks go to Jeroen Schickendantz and Felix Gaudin for their
enthusiasm around the project and the development
of the Go responsiveness measurement tool and the librespeed implementation.
We also thank Greg White, Lucas Pardue, Sebastian Moeller,
Rich Brown, Erik Auerswald, Matt Mathis and Omer Shapira for
their constructive feedback on the document.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC9110' target='https://www.rfc-editor.org/info/rfc9110'>
  <front>
    <title>HTTP Semantics</title>
    <author fullname='R. Fielding' initials='R.' role='editor' surname='Fielding'/>
    <author fullname='M. Nottingham' initials='M.' role='editor' surname='Nottingham'/>
    <author fullname='J. Reschke' initials='J.' role='editor' surname='Reschke'/>
    <date month='June' year='2022'/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='97'/>
  <seriesInfo name='RFC' value='9110'/>
  <seriesInfo name='DOI' value='10.17487/RFC9110'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="BITAG" target="https://www.bitag.org/latency-explained.php">
  <front>
    <title>Latency Explained</title>
    <author >
      <organization>Broadband Internet Technical Advisory Group</organization>
    </author>
    <date year="2022"/>
  </front>
</reference>
<reference anchor="Bufferbloat" >
  <front>
    <title>Bufferbloat: Dark Buffers in the Internet</title>
    <author initials="J." surname="Gettys">
      <organization></organization>
    </author>
    <author initials="K." surname="Nichols">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="Communications of the ACM, Volume 55, Number 1 (2012)" value=""/>
</reference>
<reference anchor="Cake" >
  <front>
    <title>Piece of CAKE: A Comprehensive Queue Management Solution for Home Gateways</title>
    <author initials="T." surname="Høiland-Jørgensen">
      <organization></organization>
    </author>
    <author initials="D." surname="Taht">
      <organization></organization>
    </author>
    <author initials="J." surname="Morton">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
  <seriesInfo name="2018 IEEE International Symposium on Local and Metropolitan Area Networks (LANMAN)" value=""/>
</reference>



<reference anchor='Prague' target='https://datatracker.ietf.org/doc/html/draft-briscoe-iccrg-prague-congestion-control-04'>
   <front>
      <title>Prague Congestion Control</title>
      <author fullname='Koen De Schepper' initials='K.' surname='De Schepper'>
         <organization>Nokia Bell Labs</organization>
      </author>
      <author fullname='Olivier Tilmans' initials='O.' surname='Tilmans'>
         <organization>Nokia Bell Labs</organization>
      </author>
      <author fullname='Bob Briscoe' initials='B.' surname='Briscoe'>
         <organization>Independent</organization>
      </author>
      <author fullname='Vidhi Goel' initials='V.' surname='Goel'>
         <organization>Apple Inc</organization>
      </author>
      <date day='24' month='July' year='2024'/>
      <abstract>
	 <t>   This specification defines the Prague congestion control scheme,
   which is derived from DCTCP and adapted for Internet traffic by
   implementing the Prague L4S requirements.  Over paths with L4S
   support at the bottleneck, it adapts the DCTCP mechanisms to achieve
   consistently low latency and full throughput.  It is defined
   independently of any particular transport protocol or operating
   system, but notes are added that highlight issues specific to certain
   transports and OSs.  It is mainly based on experience with the
   reference Linux implementation of TCP Prague and the Apple
   implementation over QUIC, but it includes experience from other
   implementations where available.

   The implementation does not satisfy all the Prague requirements (yet)
   and the IETF might decide that certain requirements need to be
   relaxed as an outcome of the process of trying to satisfy them all.
   Future plans that have typically only been implemented as proof-of-
   concept code are outlined in a separate section.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-briscoe-iccrg-prague-congestion-control-04'/>
   
</reference>


<reference anchor='SBM' target='https://datatracker.ietf.org/doc/html/draft-cheshire-sbm-02'>
   <front>
      <title>Source Buffer Management</title>
      <author fullname='Stuart Cheshire' initials='S.' surname='Cheshire'>
         <organization>Apple Inc.</organization>
      </author>
      <date day='16' month='March' year='2025'/>
      <abstract>
	 <t>   In the past decade there has been growing awareness about the harmful
   effects of bufferbloat in the network, and there has been good work
   on developments like L4S to address that problem.  However,
   bufferbloat on the sender itself remains a significant additional
   problem, which has not received similar attention.  This document
   offers techniques and guidance for host networking software to avoid
   network traffic suffering unnecessary delays caused by excessive
   buffering at the sender.  These improvements are broadly applicable
   across all datagram and transport protocols (UDP, TCP, QUIC, etc.) on
   all operating systems.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-cheshire-sbm-02'/>
   
</reference>

<reference anchor='RFC1034' target='https://www.rfc-editor.org/info/rfc1034'>
  <front>
    <title>Domain names - concepts and facilities</title>
    <author fullname='P. Mockapetris' initials='P.' surname='Mockapetris'/>
    <date month='November' year='1987'/>
    <abstract>
      <t>This RFC is the revised basic definition of The Domain Name System. It obsoletes RFC-882. This memo describes the domain style names and their used for host address look up and electronic mail forwarding. It discusses the clients and servers in the domain name system and the protocol used between them.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='13'/>
  <seriesInfo name='RFC' value='1034'/>
  <seriesInfo name='DOI' value='10.17487/RFC1034'/>
</reference>

<reference anchor='RFC1889' target='https://www.rfc-editor.org/info/rfc1889'>
  <front>
    <title>RTP: A Transport Protocol for Real-Time Applications</title>
    <author>
      <organization>Audio-Video Transport Working Group</organization>
    </author>
    <author fullname='H. Schulzrinne' initials='H.' surname='Schulzrinne'/>
    <author fullname='S. Casner' initials='S.' surname='Casner'/>
    <author fullname='R. Frederick' initials='R.' surname='Frederick'/>
    <author fullname='V. Jacobson' initials='V.' surname='Jacobson'/>
    <date month='January' year='1996'/>
    <abstract>
      <t>This memorandum describes RTP, the real-time transport protocol. RTP provides end-to-end network transport functions suitable for applications transmitting real-time data, such as audio, video or simulation data, over multicast or unicast network services. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1889'/>
  <seriesInfo name='DOI' value='10.17487/RFC1889'/>
</reference>

<reference anchor='RFC4656' target='https://www.rfc-editor.org/info/rfc4656'>
  <front>
    <title>A One-way Active Measurement Protocol (OWAMP)</title>
    <author fullname='S. Shalunov' initials='S.' surname='Shalunov'/>
    <author fullname='B. Teitelbaum' initials='B.' surname='Teitelbaum'/>
    <author fullname='A. Karp' initials='A.' surname='Karp'/>
    <author fullname='J. Boote' initials='J.' surname='Boote'/>
    <author fullname='M. Zekauskas' initials='M.' surname='Zekauskas'/>
    <date month='September' year='2006'/>
    <abstract>
      <t>The One-Way Active Measurement Protocol (OWAMP) measures unidirectional characteristics such as one-way delay and one-way loss. High-precision measurement of these one-way IP performance metrics became possible with wider availability of good time sources (such as GPS and CDMA). OWAMP enables the interoperability of these measurements. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='4656'/>
  <seriesInfo name='DOI' value='10.17487/RFC4656'/>
</reference>

<reference anchor='RFC5357' target='https://www.rfc-editor.org/info/rfc5357'>
  <front>
    <title>A Two-Way Active Measurement Protocol (TWAMP)</title>
    <author fullname='K. Hedayat' initials='K.' surname='Hedayat'/>
    <author fullname='R. Krzanowski' initials='R.' surname='Krzanowski'/>
    <author fullname='A. Morton' initials='A.' surname='Morton'/>
    <author fullname='K. Yum' initials='K.' surname='Yum'/>
    <author fullname='J. Babiarz' initials='J.' surname='Babiarz'/>
    <date month='October' year='2008'/>
    <abstract>
      <t>The One-way Active Measurement Protocol (OWAMP), specified in RFC 4656, provides a common protocol for measuring one-way metrics between network devices. OWAMP can be used bi-directionally to measure one-way metrics in both directions between two network elements. However, it does not accommodate round-trip or two-way measurements. This memo specifies a Two-Way Active Measurement Protocol (TWAMP), based on the OWAMP, that adds two-way or round-trip measurement capabilities. The TWAMP measurement architecture is usually comprised of two hosts with specific roles, and this allows for some protocol simplifications, making it an attractive alternative in some circumstances. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5357'/>
  <seriesInfo name='DOI' value='10.17487/RFC5357'/>
</reference>

<reference anchor='RFC5785' target='https://www.rfc-editor.org/info/rfc5785'>
  <front>
    <title>Defining Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <author fullname='E. Hammer-Lahav' initials='E.' surname='Hammer-Lahav'/>
    <date month='April' year='2010'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5785'/>
  <seriesInfo name='DOI' value='10.17487/RFC5785'/>
</reference>

<reference anchor='RFC6335' target='https://www.rfc-editor.org/info/rfc6335'>
  <front>
    <title>Internet Assigned Numbers Authority (IANA) Procedures for the Management of the Service Name and Transport Protocol Port Number Registry</title>
    <author fullname='M. Cotton' initials='M.' surname='Cotton'/>
    <author fullname='L. Eggert' initials='L.' surname='Eggert'/>
    <author fullname='J. Touch' initials='J.' surname='Touch'/>
    <author fullname='M. Westerlund' initials='M.' surname='Westerlund'/>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='August' year='2011'/>
    <abstract>
      <t>This document defines the procedures that the Internet Assigned Numbers Authority (IANA) uses when handling assignment and other requests related to the Service Name and Transport Protocol Port Number registry. It also discusses the rationale and principles behind these procedures and how they facilitate the long-term sustainability of the registry.</t>
      <t>This document updates IANA's procedures by obsoleting the previous UDP and TCP port assignment procedures defined in Sections 8 and 9.1 of the IANA Allocation Guidelines, and it updates the IANA service name and port assignment procedures for UDP-Lite, the Datagram Congestion Control Protocol (DCCP), and the Stream Control Transmission Protocol (SCTP). It also updates the DNS SRV specification to clarify what a service name is and how it is registered. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='165'/>
  <seriesInfo name='RFC' value='6335'/>
  <seriesInfo name='DOI' value='10.17487/RFC6335'/>
</reference>

<reference anchor='RFC6762' target='https://www.rfc-editor.org/info/rfc6762'>
  <front>
    <title>Multicast DNS</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>As networked devices become smaller, more portable, and more ubiquitous, the ability to operate with less configured infrastructure is increasingly important. In particular, the ability to look up DNS resource record data types (including, but not limited to, host names) in the absence of a conventional managed DNS server is useful.</t>
      <t>Multicast DNS (mDNS) provides the ability to perform DNS-like operations on the local link in the absence of any conventional Unicast DNS server. In addition, Multicast DNS designates a portion of the DNS namespace to be free for local use, without the need to pay any annual fee, and without the need to set up delegations or otherwise configure a conventional DNS server to answer for those names.</t>
      <t>The primary benefits of Multicast DNS names are that (i) they require little or no administration or configuration to set them up, (ii) they work when no infrastructure is present, and (iii) they work during infrastructure failures.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6762'/>
  <seriesInfo name='DOI' value='10.17487/RFC6762'/>
</reference>

<reference anchor='RFC6763' target='https://www.rfc-editor.org/info/rfc6763'>
  <front>
    <title>DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <author fullname='M. Krochmal' initials='M.' surname='Krochmal'/>
    <date month='February' year='2013'/>
    <abstract>
      <t>This document specifies how DNS resource records are named and structured to facilitate service discovery. Given a type of service that a client is looking for, and a domain in which the client is looking for that service, this mechanism allows clients to discover a list of named instances of that desired service, using standard DNS queries. This mechanism is referred to as DNS-based Service Discovery, or DNS-SD.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6763'/>
  <seriesInfo name='DOI' value='10.17487/RFC6763'/>
</reference>

<reference anchor='RFC8615' target='https://www.rfc-editor.org/info/rfc8615'>
  <front>
    <title>Well-Known Uniform Resource Identifiers (URIs)</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <date month='May' year='2019'/>
    <abstract>
      <t>This memo defines a path prefix for "well-known locations", "/.well-known/", in selected Uniform Resource Identifier (URI) schemes.</t>
      <t>In doing so, it obsoletes RFC 5785 and updates the URI schemes defined in RFC 7230 to reserve that space. It also updates RFC 7595 to track URI schemes that support well-known URIs in their registry.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8615'/>
  <seriesInfo name='DOI' value='10.17487/RFC8615'/>
</reference>

<reference anchor='RFC8766' target='https://www.rfc-editor.org/info/rfc8766'>
  <front>
    <title>Discovery Proxy for Multicast DNS-Based Service Discovery</title>
    <author fullname='S. Cheshire' initials='S.' surname='Cheshire'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document specifies a network proxy that uses Multicast DNS to automatically populate the wide-area unicast Domain Name System namespace with records describing devices and services found on the local link.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8766'/>
  <seriesInfo name='DOI' value='10.17487/RFC8766'/>
</reference>

<reference anchor='RFC8290' target='https://www.rfc-editor.org/info/rfc8290'>
  <front>
    <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
    <author fullname='T. Hoeiland-Joergensen' initials='T.' surname='Hoeiland-Joergensen'/>
    <author fullname='P. McKenney' initials='P.' surname='McKenney'/>
    <author fullname='D. Taht' initials='D.' surname='Taht'/>
    <author fullname='J. Gettys' initials='J.' surname='Gettys'/>
    <author fullname='E. Dumazet' initials='E.' surname='Dumazet'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This memo presents the FQ-CoDel hybrid packet scheduler and Active Queue Management (AQM) algorithm, a powerful tool for fighting bufferbloat and reducing latency.</t>
      <t>FQ-CoDel mixes packets from multiple flows and reduces the impact of head-of-line blocking from bursty traffic. It provides isolation for low-rate traffic such as DNS, web, and videoconferencing traffic. It improves utilisation across the networking fabric, especially for bidirectional traffic, by keeping queue lengths short, and it can be implemented in a memory- and CPU-efficient fashion across a wide range of hardware.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8290'/>
  <seriesInfo name='DOI' value='10.17487/RFC8290'/>
</reference>

<reference anchor='RFC8033' target='https://www.rfc-editor.org/info/rfc8033'>
  <front>
    <title>Proportional Integral Controller Enhanced (PIE): A Lightweight Control Scheme to Address the Bufferbloat Problem</title>
    <author fullname='R. Pan' initials='R.' surname='Pan'/>
    <author fullname='P. Natarajan' initials='P.' surname='Natarajan'/>
    <author fullname='F. Baker' initials='F.' surname='Baker'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='February' year='2017'/>
    <abstract>
      <t>Bufferbloat is a phenomenon in which excess buffers in the network cause high latency and latency variation. As more and more interactive applications (e.g., voice over IP, real-time video streaming, and financial transactions) run in the Internet, high latency and latency variation degrade application performance. There is a pressing need to design intelligent queue management schemes that can control latency and latency variation, and hence provide desirable quality of service to users.</t>
      <t>This document presents a lightweight active queue management design called "PIE" (Proportional Integral controller Enhanced) that can effectively control the average queuing latency to a target value. Simulation results, theoretical analysis, and Linux testbed results have shown that PIE can ensure low latency and achieve high link utilization under various congestion situations. The design does not require per-packet timestamps, so it incurs very little overhead and is simple enough to implement in both hardware and software.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8033'/>
  <seriesInfo name='DOI' value='10.17487/RFC8033'/>
</reference>

<reference anchor='RFC8259' target='https://www.rfc-editor.org/info/rfc8259'>
  <front>
    <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
    <author fullname='T. Bray' initials='T.' role='editor' surname='Bray'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
      <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='90'/>
  <seriesInfo name='RFC' value='8259'/>
  <seriesInfo name='DOI' value='10.17487/RFC8259'/>
</reference>

<reference anchor='RFC9293' target='https://www.rfc-editor.org/info/rfc9293'>
  <front>
    <title>Transmission Control Protocol (TCP)</title>
    <author fullname='W. Eddy' initials='W.' role='editor' surname='Eddy'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>This document specifies the Transmission Control Protocol (TCP). TCP is an important transport-layer protocol in the Internet protocol stack, and it has continuously evolved over decades of use and growth of the Internet. Over this time, a number of changes have been made to TCP as it was specified in RFC 793, though these have only been documented in a piecemeal fashion. This document collects and brings those changes together with the protocol specification from RFC 793. This document obsoletes RFC 793, as well as RFCs 879, 2873, 6093, 6429, 6528, and 6691 that updated parts of RFC 793. It updates RFCs 1011 and 1122, and it should be considered as a replacement for the portions of those documents dealing with TCP requirements. It also updates RFC 5961 by adding a small clarification in reset handling while in the SYN-RECEIVED state. The TCP header control bits from RFC 793 have also been updated based on RFC 3168.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='7'/>
  <seriesInfo name='RFC' value='9293'/>
  <seriesInfo name='DOI' value='10.17487/RFC9293'/>
</reference>

<reference anchor='RFC8305' target='https://www.rfc-editor.org/info/rfc8305'>
  <front>
    <title>Happy Eyeballs Version 2: Better Connectivity Using Concurrency</title>
    <author fullname='D. Schinazi' initials='D.' surname='Schinazi'/>
    <author fullname='T. Pauly' initials='T.' surname='Pauly'/>
    <date month='December' year='2017'/>
    <abstract>
      <t>Many communication protocols operating over the modern Internet use hostnames. These often resolve to multiple IP addresses, each of which may have different performance and connectivity characteristics. Since specific addresses or address families (IPv4 or IPv6) may be blocked, broken, or sub-optimal on a network, clients that attempt multiple connections in parallel have a chance of establishing a connection more quickly. This document specifies requirements for algorithms that reduce this user-visible delay and provides an example algorithm, referred to as "Happy Eyeballs". This document obsoletes the original algorithm description in RFC 6555.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8305'/>
  <seriesInfo name='DOI' value='10.17487/RFC8305'/>
</reference>

<reference anchor='RFC9114' target='https://www.rfc-editor.org/info/rfc9114'>
  <front>
    <title>HTTP/3</title>
    <author fullname='M. Bishop' initials='M.' role='editor' surname='Bishop'/>
    <date month='June' year='2022'/>
    <abstract>
      <t>The QUIC transport protocol has several features that are desirable in a transport for HTTP, such as stream multiplexing, per-stream flow control, and low-latency connection establishment. This document describes a mapping of HTTP semantics over QUIC. This document also identifies HTTP/2 features that are subsumed by QUIC and describes how HTTP/2 extensions can be ported to HTTP/3.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9114'/>
  <seriesInfo name='DOI' value='10.17487/RFC9114'/>
</reference>

<reference anchor='RFC9330' target='https://www.rfc-editor.org/info/rfc9330'>
  <front>
    <title>Low Latency, Low Loss, and Scalable Throughput (L4S) Internet Service: Architecture</title>
    <author fullname='B. Briscoe' initials='B.' role='editor' surname='Briscoe'/>
    <author fullname='K. De Schepper' initials='K.' surname='De Schepper'/>
    <author fullname='M. Bagnulo' initials='M.' surname='Bagnulo'/>
    <author fullname='G. White' initials='G.' surname='White'/>
    <date month='January' year='2023'/>
    <abstract>
      <t>This document describes the L4S architecture, which enables Internet applications to achieve low queuing latency, low congestion loss, and scalable throughput control. L4S is based on the insight that the root cause of queuing delay is in the capacity-seeking congestion controllers of senders, not in the queue itself. With the L4S architecture, all Internet applications could (but do not have to) transition away from congestion control algorithms that cause substantial queuing delay and instead adopt a new class of congestion controls that can seek capacity with very little queuing. These are aided by a modified form of Explicit Congestion Notification (ECN) from the network. With this new architecture, applications can have both low latency and high throughput.</t>
      <t>The architecture primarily concerns incremental deployment. It defines mechanisms that allow the new class of L4S congestion controls to coexist with 'Classic' congestion controls in a shared network. The aim is for L4S latency and throughput to be usually much better (and rarely worse) while typically not impacting Classic performance.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9330'/>
  <seriesInfo name='DOI' value='10.17487/RFC9330'/>
</reference>




    </references>


<section anchor="apache-traffic-server-example-configurations"><name>Apache Traffic Server Example Configurations</name>

<t>Apache Traffic Server starting at version 9.1.0 supports configuration as a
Responsiveness Test Server, using the generator and the statichit plugin.</t>

<t>This section shows fragments of sample server configurations to host a
Responsiveness Test Server.</t>

<section anchor="single-server-configuration"><name>Single Server Configuration</name>

<t>Given a local file “config.example.com.json” with the following content:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://www.example.com/large",
    "small_download_url":"https://www.example.com/small",
    "upload_url":        "https://www.example.com/upload"
  }
}
]]></artwork></figure>

<t>The sample remap configuration file then is:</t>

<figure><artwork><![CDATA[
map https://www.example.com/.well-known/nq \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json

map https://www.example.com/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://www.example.com/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://www.example.com/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
<section anchor="alternate-server-configuration"><name>Alternate Server Configuration</name>

<t>If a separate test_endpoint server is desired, then on the main www.example.com server(s)
a JSON configuration file like the one shown below is used:</t>

<figure><artwork><![CDATA[
{
  "version": 1,
  "urls": {
    "large_download_url":"https://www.example.com/large",
    "small_download_url":"https://www.example.com/small",
    "upload_url":        "https://www.example.com/upload"
  }
  "test_endpoint": "nq-test-server.example.com"
}
]]></artwork></figure>

<t>On the main www.example.com server(s) a remap configuration file like the
one shown below is used, to serve the JSON configuration file to clients:</t>

<figure><artwork><![CDATA[
map https://www.example.com/.well-known/nq \
    http://localhost/ \
    @plugin=statichit.so \
    @pparam=--file-path=config.example.com.json \
    @pparam=--mime-type=application/json
]]></artwork></figure>

<t>On nq-test-server.example.com a remap configuration file like the
one shown below is used, to handle the test downloads and uploads:</t>

<figure><artwork><![CDATA[
map https://www.example.com/large \
    http://localhost/cache/8589934592/ \
    @plugin=generator.so

map https://www.example.com/small \
    http://localhost/cache/1/ \
    @plugin=generator.so

map https://www.example.com/upload \
    http://localhost/ \
    @plugin=generator.so
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAHD5XWgAA+2965IcV3Im+D+eIrZ6ZaySMpO4sgmsWlIRAEmocalGFUWb
Xa6RkZlRldHIjMiOiEShmg1Zv8aYad5j/s+b9JOMf5+7n3MiMguEpDHtzNq0
TN2FqogT5+LH7/75dDrN+qpfl4/zN2W3bequelfWZdflu3pZtvn3Tfu2qq/y
J029rPpK/p4V83lbvvv055fNoi428oFlW1z206rsL6fVdruZtoMBpne+yJZF
Xz7OFvLfV0178zjv+mWWdbv5puo6GeviZivDPH928XW2aJbymcf5Tgb7Mqu2
7eO8b3ddf+/OnUd37mVFWxaP84u2qOUTbZ9dy7Su2ma3ldfP8rOyvWzaTVEv
yvxlWXS7ttyUdZ+9LW/kwaU8U/dlW5f99CmmLFPoi3r5Y7Fuavn+Tdll2+px
/v/0zWKSdzJ8W1528tPNBj/8v1lW7PpV0z7O8nwq/5/nVd09zp/M8rOi6BYr
/kp35Mmqrbq+2a7SPzWtrOt0u12XMo/FjL/r5Btl/zh/XZf2p7OifZt/X9zw
z4uql916stuWbV/VzSR/UqwrWWJdFfmjh3fuPtCnml3dY1u/q6u+XObnvWx0
lzeX+emmbKtFwafKTVGtH+eLLWf0DwW+Nls0m2y4nDcz2bqbsk1W80Y2qViv
k9//z7GUtt3cuozzmRxC2a2qtkxWct7virYf/uV/jrUsbEq3Luj7Wf5tcS13
sEvW830lx5L+mouR770r204miY89qepFVddFX6XfW/Gl69U/7Bb4xWy3mJXL
XZbVuD+9vA8qf/P1k3t37z6yH7+8++sH9uOju3fvPM6yqr5MH//q+cXpN4/5
FWM9Ry9kyfXiJn/2frsuqrpcHvHP8SLJf6Y666/apljOhdTCLc0vysWqlo1a
56fLd5XcyJv8G1x2vkeekt+7c++efrFor3Bkq77fdo8///z6+no2r/riaiaj
f77WeUxLn8dsu8IwX+0uL8t2vm6K/vGhmXHr/3GWf1P2/U03+O1vZ/mrarFq
1t1gxemI+VNQjf6mk7fyflWG1elOdEIJZYeNFIJqNpsd1kv+irPD86dPXk7y
f2rWu02ZP3w4yV/tNnNhyHfz43t37t47kVGeFG/L22d/IYTz3/5rtZadnf7j
f/uvskt1V9aDR57O8oti1Y8X/VJYYFMPVndWlcJbQVWnv30m1wZz3rblqiS7
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
UlMlQ+niU3byf/Ox7L8DNEK0nRkdAQA=

-->

</rfc>

